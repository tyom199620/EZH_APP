"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var expo_1 = require("expo");
var humps_1 = tslib_1.__importDefault(require("humps"));
var Path = expo_1.Svg.Path, Rect = expo_1.Svg.Rect, Defs = expo_1.Svg.Defs, Mask = expo_1.Svg.Mask, G = expo_1.Svg.G, ClipPath = expo_1.Svg.ClipPath;
var SVG_OBJECT_MAP = {
    svg: expo_1.Svg,
    path: Path,
    rect: Rect,
    defs: Defs,
    mask: Mask,
    g: G,
    clipPath: ClipPath,
};
function convert(createElement, element, extraProps) {
    if (extraProps === void 0) { extraProps = {}; }
    if (typeof element === 'string' || typeof element === 'number' || !element) {
        return element;
    }
    var children = (element.children || []).map(function (child) {
        return convert(createElement, child);
    });
    var mixins = Object.keys(element.attributes || {}).reduce(function (acc, key) {
        var val = element.attributes[key];
        switch (key) {
            case 'class':
            case 'role':
            case 'style':
            case 'xmlns':
                delete element.attributes[key];
                break;
            default:
                if (key.indexOf('aria-') === 0 ||
                    key.indexOf('data-') === 0 ||
                    ('fill' === key && 'currentColor' === val)) {
                    delete element.attributes[key];
                }
                else {
                    acc.attrs[humps_1.default.camelize(key)] = val;
                }
                break;
        }
        return acc;
    }, { attrs: {} });
    return createElement.apply(void 0, [SVG_OBJECT_MAP[element.tag], tslib_1.__assign({}, mixins.attrs, extraProps)].concat(children));
}
exports.convert = convert;
